1. Launch Linux EC2 instance in AWS
2. Create and attach IAM role to EC2 Instance.
Kops need permissions to access
  	S3    EC2   VPC  Route53     Autoscaling	etc..
3. Install Kops on EC2
1 curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
 2 chmod +x kops-linux-amd64
 3  sudo mv kops-linux-amd64 /usr/local/bin/kops
 4  kops version
4. Install kubectl
1 curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
2 chmod +x ./kubectl
3 mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
4 kubectl version --short --client
5. Create S3 bucket in AWS
1 aws configure
2 aws s3 mb s3://devops.in.k8s --region ap-south-1
3 aws s3 ls
6. Create private hosted zone in AWS Route53
Head over to aws Route53 and create hostedzone
Choose name for example (devops.in)
Choose type as private hosted zone for VPC
Select default vpc in the region you are setting up your cluster
Hit create
7 Configure environment variables.
Open .bashrc file
	vi ~/.bashrc
	export KOPS_CLUSTER_NAME=devops.in
	export KOPS_STATE_STORE=s3://devops.in.k8s
source ~/.bashrc
8. Create ssh key pair
This keypair is used for ssh into kubernetes cluster
  ssh-keygen
9. Create a Kubernetes cluster definition.
kops create cluster --state=${KOPS_STATE_STORE} --node-count=2 --master-size=t2.micro --node-size=t2.micro --zones=ap-south-1a --name=${KOPS_CLUSTER_NAME} --dns private --master-count 1
10. Create Kubernetes cluster
     kops update cluster --yes
 	kops validate cluster
 	kops delete cluster  --yes
 

