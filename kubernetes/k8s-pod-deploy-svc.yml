Pod.yml
apiVersion: v1
kind: Pod
metadata:
  name: sample-pod
  labels:
    zone: Prod
    version: v1
spec:
  containers:
  - name: sample-ctr
    image: tomcat
    ports:
    - containerPort: 8080
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Deploy1.yml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: deploy1
spec:
  replicas: 5
  template:
    metadata:
      labels:
         app: app-v1
    spec:
     containers:
     - name: sample-ctr
       image: jenkins
       ports:
       - containerPort: 8080
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
apiVersion: v1
kind: Service
metadata:
  name: svc1
  labels:
    name: sample-app
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
      app: app-v1
  type: LoadBalancer
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  428  kubectl get deploy deploy1
  429  cp deploy1.yml deploy2.yml
  430  ls
  431  vim deploy2.yml
  432  ls
  433  cp svc1.yml svc2.yml
  434  ls
  435  vim svc2.yml
  436  cat svc2.yml
  437  clear
  438  ls
  439  kubectl create -f deploy2.yml
  440  kubectl get deploy
  441  kubectl get pods
  442  vim deploy2.yml
  443  kubectl get svc
  444  clear
  445  cat svc2.yml
  446  kubectl create -f svc2.yml
  447  kubectl get svc
  448  clear
  450  kubectl describe deploy deploy1
  451  kubectl describe deploy deploy2
  452  clear
  453  kubectl get svc
  454  deploy1---svc1
  455  kubectl get svc
  456  vim svc1.yml
  457  kubectl apply -f svc1.yml
  458  kubectl get svc
  459  cat svc1.yml
  460  cat svc2.yml
  461  vim svc1.yml
  462  kubectl apply -f svc1.yml
  463  clear
  464  cat deploy1.yml
  465  cat deploy2.yml
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++deploy2.yml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: deploy2
spec:
  replicas: 5
  template:
    metadata:
      labels:
         app: app-v2
    spec:
     containers:
     - name: sample-ctr
       image: jenkins
       ports:
       - containerPort: 8080
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Svc2.yml

apiVersion: v1
kind: Service
metadata:
  name: svc2
  labels:
    name: sample-app
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
      app: app-v2
  type: LoadBalancer
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Svc1.yml
apiVersion: v1
kind: Service
metadata:
  name: svc1
  labels:
    name: sample-app
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
      app: app-v1
  type: LoadBalancer
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

kubectl get deployment deploy1  --output yaml


